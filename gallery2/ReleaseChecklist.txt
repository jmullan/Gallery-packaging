Release checklist

When approaching RC-1 of a Gallery 2.x.0 release:
  - Check for available updates of adodb, smarty, etc.
  - Bump version in GalleryTemplate.class to trigger clear of smarty cache for upgraders,
    if this wasn't already done when adding a new smarty version
  - Bump version number in header images for installer/upgrader
  - Select a release codename, create logo button image
  - Review and update README.html; make sure that its title, codename/introduction
    and logo buttons are correct
  - Make sure modules/core/classes/GalleryTemplateAdapter.class has has correct logo
    and version text for gallery2-version logoButton

Release prep for RCs and final of Gallery 2.x.0 release:
  - Commit language updates from translations tracker
  - perl lib/tools/po/update-all-translations.pl to ensure all language files are up to date
  - Add/update Gallery2:Modules:* and Gallery2:Themes:* codex pages
  - Bump version for every plugin that has changed since last release but hasn't changed version
    + update values in changed-plugins.sh and run it
    + for final release (not RC) bump version for new plugins to 1.0.0
  - Bump GalleryVersion and core version in modules/core/module.inc
    + core version: bump 3rd number for RCs, set to 1.x.0 for final
    + update modules/core/CoreModuleExtras::upgrade and ::_prepareConfigUpgrade too

Release prep for Gallery 2.x.y patch release:
  - Make fixes/changes, ensure they are merged between trunk and release branch
  - Bump version for every plugin that has changed since last release but hasn't changed version
    + update values in changed-plugins.sh and run it
  - Bump GalleryVersion and core version in modules/core/module.inc in release branch
    + core version: bump 4th number (eg. 1.1.0 -> 1.1.0.1)
    + update modules/core/CoreModuleExtras::upgrade and ::_prepareConfigUpgrade too


Release steps:
- Update all MANIFEST files
- Make sure all unit tests pass
- Sync a different workspace and verify:
  + upgrading works
  + installer system check doesn't report any missing/modified files (verify on Unix and Windows)
- Tag the release
  + Example for 2.x.0 RC/final release:
    svn mkdir https://gallery.svn.sourceforge.net/svnroot/gallery/tags/RELEASE_2_1_RC_2
    svn copy https://gallery.svn.sourceforge.net/svnroot/gallery/trunk/gallery2 https://gallery.svn.sourceforge.net/svnroot/gallery/tags/RELEASE_2_1_RC_2
  + Example for 2.x.y patch release:
    svn copy https://gallery.svn.sourceforge.net/svnroot/gallery/branches/BRANCH_2_1 https://gallery.svn.sourceforge.net/svnroot/gallery/tags/RELEASE_2_1_2
- For a 2.x.0 FINAL release, create a release branch:
  + svn copy https://gallery.svn.sourceforge.net/svnroot/gallery/tags/RELEASE_2_1 https://gallery.svn.sourceforge.net/svnroot/gallery/branches/BRANCH_2_1
- Update preinstaller/preinstall.php
  + update @versionId to match current version
  + update release numbers in various urls
- Update the TAG and PATCH_FOR vars in build.php
  + PATCH_FOR = array() for 2.x.0 RCs and final, set previous tags for patch release
- build.php scrub
- build.php release
- build.php preinstaller
- build.php export
- Update upgrade/patch documentation if necessary (Gallery2:Upgrading_to_2.1.x)
- Prepare release announcement
  + Create story; unpublished, promote to front page, short url = gallery_{version}_released
  + For RC releases, add forum topic for reporting/tracking issues:
    Tech Zone / Gallery 2.x forum, title = Gallery 2.x-RC-y Feedback, unpublished, sticky,
    short url = forum/gallery_2.x_RCy_feedback
- Release the package on sf.net
  Use releaseforge.sf.net for the following:
  (some steps ok with sf.net web interface; definitely want releaseforge for filetype/arch step)
  + create a new release in the 'gallery2' package and add the distributions
  + create a new release in the 'gallery2 plugins' package (if necessary) and add all the
    modules and themes to the release
  + set the file types and architecture (arch = Any, file type = .gz or .zip)
  + hide older releases (if necessary)
    = for RC-2 or higher, hide previous RC
    = for final release, hide previous RC and N-2 release (ie, G2.2 hides G2.0)
    = for patch release, hide release it patches
  + send notification of new release to those watching
- Update Gallery2:Download on the codex
  + Edit RELEASE in update-codex-download-page.php
  + Run update-codex-download-page.php
  + Cut and paste its output on to Gallery2:Download
  + Click "show changes" and verify what you see
  + Save changes; for RC release then reapply the previous revision so that Gallery2:Download
    has the current stable release and the RC page can be accessed via oldid query parameter
- Update http://gallery.menalto.com/downloadblock
  + Always keep current stable release listed first (RC is listed below this)
- Update http://gallery.menalto.com/downloads
- Update "News" block of codex Main_Page
- Update http://gallery.menalto.com/admin/gmc_versioncheck and add/remove rc=... line
  when entering/leaving RC stage
- Publish release announcement (and forum topic for RC feedback)
- Post announcements/* (Update article pushed off of front page on GMC to
  comments = read only)
- Check http://gallery.menalto.com/sfvote/stats and send emails for completed items
- After RC releases, email gallery-translations@lists.sourceforge.net to encourage
  translators to submit updates before the final release

